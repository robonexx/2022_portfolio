.hamburger,
.close {
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  cursor: pointer;
  /* position absolute position the icons relative to the body because they have no position relative parents*/
  position: absolute;
  top: 4rem;
  right: 2rem;
  width: 56px;
  height: 56px;
  border-radius: 50%;
  /*  remove styling on link*/
  text-decoration: none;
}

.hamburger > span,
.close > span {
  font-size: 1rem;
  text-transform: uppercase;
  text-align: center;
  padding: 1.25rem 0;
  font-weight: 600;
}

.hamburger {
  color: var(--primary-color);
  background: var(--secondary-color);
}

.close {
  color: var(--secondary-color);
  background: var(--primary-color);
}

.hamburger span,
.close span {
  width: 100%;
  height: 100%;
}

.menu {
  /* menu styling*/
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  list-style: none;
  background: black;
  display: flex;
  flex-flow: column;
  align-items: center;
  justify-content: center;
  /* simple menu animation, menu pushed to right side of screen */
  transform: translateX(100vw);
  transition: transform 0.2s ease;
  z-index: 1000;
}

/* :target is called when its anchor id #menu is called by clicking on the hamburger which has href="#menu" */

.menu:target {
  /* here we call the pseudo-class :target to open menu*/
  /* animating the menu to the screen from right */
  transform: translateX(0);
}

.nav_link {
  display: block;
  font-family: "Open Sans", sans-serif;
  color: var(--primary-color);
  font-weight: bold;
  font-size: 2rem;
  /* remove default underline and add our own with padding and border bottom */
  text-decoration: none;
  padding-bottom: 2rem;
  text-transform: uppercase;
}

.nav_link:hover,
.nav_link:focus {
  color: transparent;
  -webkit-text-stroke: 1px var(--primary-color);
  letter-spacing: 2px;
}

@media screen and (min-width: 768px) {
  nav {
    height: 100%;
    width: 100%;
  }

  .menu {
    position: relative;
    display: flex;
    list-style-type: none;
    width: 100%;
    height: 100%;
    overflow: hidden;
    list-style: none;
    background: var(--secondary-color);
    display: flex;
    flex-direction: row;
    align-items: center;
    /* simple menu animation, menu pushed to right side of screen */
    transform: translateX(0);
    transition: transform 0.2s ease;
    z-index: 1000;
  }

  .nav_item {
    position: relative;
    padding: 0 1rem;
  }

  .nav_link {
    position: relative;
    font-size: calc(1.2vmin + 1.75vmax);
    color: transparent;
    -webkit-text-stroke: 1px var(--primary-color);
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 900;
    letter-spacing: 2px;
    cursor: pointer;
    transition: color 0.4s ease-in-out;
    animation: from_opacity 1.6s 0.6s ease-out 1;
    z-index: 100;
  }

  .nav_link:hover,
  .nav_link:focus {
    color: var(--primary-color);
    cursor: pointer;
    border-bottom: none;
  }

  .hamburger,
  .close {
    display: none;
  }
}

/*
.line {
  position: absolute;
  width: 1rem;
  height: 1px;
  background-color: rgb(255, 255, 255);
  transition: all 0.4s cubic-bezier(0.75, 0.2, 0.05, 1);
  filter: drop-shadow(1px 1px 1px black);
}
.line::before {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1px;
  background-color: rgb(255, 255, 255);
  transform: translateY(-0.5rem) translateX(-0.25rem);
}
.line::after {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1px;
  background-color: rgb(255, 255, 255);
  transform: translateY(0.5rem) translateX(-1.25rem);
}

.hamburger.open {
  margin-left: auto;
  margin-right: 2rem;
  transition: all 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.hamburger.open .line {
  width: inherit;
  position: absolute;
  background-color: transparent;
  left: 0.5rem;
}
.hamburger.open .line::before {
  width: 2rem;
  transform: rotate(45deg);
  animation: line2 0.4s ease;
}
.hamburger.open .line::after {
  width: 2rem;
  transform: rotate(-45deg);
  animation: line3 0.4s ease;
}

@keyframes line2 {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(135deg);
  }
}
@keyframes line3 {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(-135deg);
  }
}
 */
